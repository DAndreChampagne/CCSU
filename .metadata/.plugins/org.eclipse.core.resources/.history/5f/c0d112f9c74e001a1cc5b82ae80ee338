package tests;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Arrays;
import java.util.stream.Stream;

//import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.converter.ArgumentConversionException;
import org.junit.jupiter.params.converter.ConvertWith;
import org.junit.jupiter.params.converter.SimpleArgumentConverter;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.MethodSource;
import org.junit.jupiter.params.provider.ValueSource;
import org.junit.runners.Parameterized.Parameters;

import cs506.HW1.HW1;;




public class HW1_Tests {
	
	public static class IntArrayConverter extends SimpleArgumentConverter {

	    @Override
	    protected Object convert(Object source, Class<?> targetType) throws ArgumentConversionException {
	    	try {
	            String[] strings = ((String) source).split("\\s*;\\s*");
	
	            int[] results = Arrays.stream(strings).mapToInt(Integer::parseInt).toArray();
	            
	            return results;
	    	} catch (Exception ex) {
	    		throw new ArgumentConversionException(ex.getCause().getMessage());
	    	}
	    }

	}
	
	@BeforeAll
	public static void BeforeAll() {
		
	}
	
	@AfterAll
	public static void AfterAll() {
		
	}
	
	@BeforeEach
	public void BeforeEach() {
		
	}
	
	@AfterEach
	public void AfterEach() {
		
	}
	
	
//	private static Stream<Arguments> FindLastTest_Data() {
//		return Stream.of(
//			Arguments.of(new int[] {2,3,5}, 2, 0)
//		);
//	}	
//	@ParameterizedTest
//	@MethodSource("FindLastTest_Data")
//	public void FindLastTest(int[] x, int y, int expected) {
//		int actual = HW1.findLast(x, y);
//		
//		assertEquals(expected, actual);
//	}
	
	@ParameterizedTest
	@CsvSource({
		"2;3;5, 2, 0",
		"1;3;5, 3, 1"
	})
	public void FindLastTest(@ConvertWith(IntArrayConverter.class) int[] x, int y, int expected) {
		int actual = HW1.findLast(x, y);
		
		assertEquals(expected, actual);
	}
	
}
